/*
 * FilePondPluginImageCrop 1.0.1
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */
const isImage=t=>/^image/.test(t.type),getAutoCropRect=(t,e)=>{let n,i,o,r;return t<e?(i=0,n=.5*(1-(o=(r=1)/e*t))):(n=0,i=.5*(1-(r=(o=1)/t*e))),{x:n,y:i,height:r,width:o}},getNumericAspectRatioFromString=t=>{if("string"==typeof t){const[e,n]=t.split(":");return n/e}return t};var plugin$1=t=>{const{addFilter:e,utils:n}=t,{Type:i,loadImage:o}=n;return e("DID_LOAD_ITEM",(t,{query:e})=>new Promise((n,i)=>{const r=t.file;if(!isImage(r)||!e("GET_ALLOW_IMAGE_CROP"))return n(t);const a=e("GET_IMAGE_CROP_ASPECT_RATIO");if(null===a)return n(t);const u=getNumericAspectRatioFromString(a),c=URL.createObjectURL(r);o(c).then(e=>{URL.revokeObjectURL(c);let i=e.naturalWidth,o=e.naturalHeight;const r=(t.getMetadata("exif")||{}).orientation||-1;r>=5&&r<=8&&([i,o]=[o,i]);const a=getAutoCropRect(o/i,u);t.setMetadata("crop",{rect:a,aspectRatio:u}),n(t)})})),{options:{allowImageCrop:[!0,i.BOOLEAN],imageCropAspectRatio:[null,i.STRING]}}};"undefined"!=typeof navigator&&document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:plugin$1}));export default plugin$1;